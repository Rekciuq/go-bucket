// Code generated by ent, DO NOT EDIT.

package url

import (
	"time"

	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the url type in the database.
	Label = "url"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldIsUsed holds the string denoting the is_used field in the database.
	FieldIsUsed = "is_used"
	// FieldIsImage holds the string denoting the is_image field in the database.
	FieldIsImage = "is_image"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldExpiresAt holds the string denoting the expires_at field in the database.
	FieldExpiresAt = "expires_at"
	// Table holds the table name of the url in the database.
	Table = "urls"
)

// Columns holds all SQL columns for url fields.
var Columns = []string{
	FieldID,
	FieldIsUsed,
	FieldIsImage,
	FieldCreatedAt,
	FieldExpiresAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultIsUsed holds the default value on creation for the "is_used" field.
	DefaultIsUsed bool
	// DefaultIsImage holds the default value on creation for the "is_image" field.
	DefaultIsImage bool
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultExpiresAt holds the default value on creation for the "expires_at" field.
	DefaultExpiresAt func() time.Time
)

// OrderOption defines the ordering options for the Url queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByIsUsed orders the results by the is_used field.
func ByIsUsed(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldIsUsed, opts...).ToFunc()
}

// ByIsImage orders the results by the is_image field.
func ByIsImage(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldIsImage, opts...).ToFunc()
}

// ByCreatedAt orders the results by the created_at field.
func ByCreatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreatedAt, opts...).ToFunc()
}

// ByExpiresAt orders the results by the expires_at field.
func ByExpiresAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldExpiresAt, opts...).ToFunc()
}
